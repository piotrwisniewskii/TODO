@using TODO.Data.Enums
@model Note

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="NoteName" class="control-label"></label>
                <input asp-for="NoteName" class="form-control" />
                <span asp-validation-for="NoteName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="NoteMessage" class="control-label"></label>
                <input asp-for="NoteMessage" class="form-control" />
                <span asp-validation-for="NoteMessage" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="NoteDate" class="control-label"></label>
                <input asp-for="NoteDate" class="form-control" />
                <span asp-validation-for="NoteDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Priority" class="control-label"></label>
                <select asp-for="Priority" asp-items="Html.GetEnumSelectList<Priority>()" class="form-control">
                    <option selected="selected" value="">Please choose Priority</option>
                    </select>
                <span asp-validation-for="Priority" class="text-danger"></span>
            </div>
                <div class="form-group">
                <label asp-for="IsDone" class="control-label"></label>
                <select asp-for="IsDone" asp-items="Html.GetEnumSelectList<IsDone>()" class="form-control">
                    <option selected="IsDone" value="">Please choose is task already done ? </option> 
                    </select>
                <span asp-validation-for="Priority" class="text-danger"></span>
            </div>
            @*     <div class="form-group">
                <label asp-for="TODOUserId" class="control-label"></label>
                @Html.DropDownListFor(m => m.TODOUserId, new SelectList(Model.OwnersDictionary,"Key","Value"),
                "-Please select owner-",
                new {
                    @class = "form-control"
                })
                <span asp-validation-for="TODOUserId" class="text-danger"></span>
            </div>*@
            <div class="form-group">
                <input type="submit" value="Update" formmethod="post" class="btn btn-outline-success float-end" />
                <a class="btn btn-outline-secondary" asp-action="Index">Show All</a>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }
